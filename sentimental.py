# -*- coding: utf-8 -*-
"""Sentimental.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mG07r6leV4a2a9OcVbNkErQjowlrKndZ
"""

!pip install nltk pandas

import nltk
nltk.download('vader_lexicon')
nltk.download('twitter_samples')

from nltk.corpus import twitter_samples

# Load positive and negative tweets
positive_tweets = twitter_samples.strings('positive_tweets.json')
negative_tweets = twitter_samples.strings('negative_tweets.json')
all_tweets = positive_tweets + negative_tweets

print("Positive tweets:", len(positive_tweets))
print("Negative tweets:", len(negative_tweets))
print("Sample tweet:", all_tweets[0])

from nltk.sentiment import SentimentIntensityAnalyzer

sia = SentimentIntensityAnalyzer()

results = []

for tweet in all_tweets:
    score = sia.polarity_scores(tweet)
    if score['compound'] > 0.05:
        sentiment = 'positive'
    elif score['compound'] < -0.05:
        sentiment = 'negative'
    else:
        sentiment = 'neutral'
    results.append({'tweet': tweet, 'sentiment': sentiment})

# Check the first few results
import pandas as pd
df = pd.DataFrame(results)
df.head()

print(df['sentiment'].value_counts())

!pip install matplotlib seaborn

import matplotlib.pyplot as plt
import seaborn as sns

# Count the number of each sentiment
sentiment_counts = df['sentiment'].value_counts()

# Plot bar chart
plt.figure(figsize=(8,5))
sns.barplot(x=sentiment_counts.index, y=sentiment_counts.values, palette=['yellow', 'red', 'gray'])
plt.title('Sentiment Distribution of Tweets')
plt.xlabel('Sentiment')
plt.ylabel('Number of Tweets')
plt.show()

plt.figure(figsize=(6,6))
colors = ['pink', 'red', 'blue']
plt.pie(sentiment_counts.values, labels=sentiment_counts.index, colors=colors, autopct='%1.1f%%', startangle=140)
plt.title('Tweet Sentiment Composition')
plt.axis('equal')
plt.show()

